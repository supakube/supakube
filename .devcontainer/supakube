#!/bin/bash

# Define the install function placeholder
install() {
    echo "Running install function..."
    cargo run --bin supakube -- install --development
}

# Define the install function placeholder
hot-install() {
    local image_name="ghcr.io/supakube/hot-reload:latest"
    local namespace="supakube"
    local deployment="hot-reload"

    echo "Installing hot reloader"
    earthly -P +hot-reload
    k3d image import $image_name
    kubectl patch deployment $deployment -n $namespace -p \
    "{\"spec\": {\"template\": {\"spec\": {\"containers\": [{\"name\": \"$deployment\", \"image\": \"$image_name\", \"imagePullPolicy\": \"Never\"}]}}}}"
}

# Define the function to call on file change
on_file_change() {
    local app_name="hot-reload"
    local namespace="supakube"

    echo "File changed, running function..."
    # Add the code you want to execute on file change
    # Simulate a process with sleep, for example
    start_time=$(date +%s)
    POD_NAME=$(kubectl get pods -n supakube -l app=$app_name -o jsonpath="{.items[0].metadata.name}")
    kubectl cp /workspace/target/debug/web-server $namespace/$POD_NAME:/app/new-server
    kubectl cp /workspace/crates/hot-reload/new-server.txt $namespace/$POD_NAME:/app/new-server.txt
    end_time=$(date +%s)
    duration=$((end_time - start_time))
    echo "Deployment completed in ${duration} seconds."
}

# Define the watch function
watch() {
    local file_to_watch="/workspace/target/debug/web-server"
    
    # Check if inotifywait is available
    if ! command -v inotifywait &> /dev/null; then
        echo "Error: inotifywait is required but not installed. Install it with 'sudo apt install inotify-tools' or equivalent."
        exit 1
    fi
    
    echo "Watching file: $file_to_watch for changes..."
    
    while true; do
        # Wait for a modification in the folder and run on_file_change
        inotifywait -e modify "$file_to_watch" &> /dev/null
        on_file_change
    done
}

# Main script logic to handle subcommands
case "$1" in
    install)
        install
        ;;
    hot-install)
        hot-install
        ;;
    watch)
        watch
        ;;
    *)
        echo "Usage: $0 {install|watch <folder>}"
        exit 1
        ;;
esac